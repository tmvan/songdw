<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/14/2015 10:07:13 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DESKTOP-IJ8P0MR"
  DTS:CreatorName="DESKTOP-IJ8P0MR\TTID"
  DTS:DTSID="{29E92CBE-D707-48FF-A7F4-E72CEAE81B3D}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5583.0"
  DTS:LocaleID="1033"
  DTS:MaxErrorCount="0"
  DTS:ObjectName="UpdateDatasource"
  DTS:PackageType="5"
  DTS:VersionBuild="82"
  DTS:VersionGUID="{6F2BB01F-E9B9-4231-92C3-AEFCBB942BB6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Csv File Connection]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{E07A36F0-6D8E-46AA-A0D4-D607C23D23F4}"
      DTS:ObjectName="Csv File Connection">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::SourceFolder] + "\\" +  @[User::SourceCsvFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="D:\Proj\Git\songdw\__dobi\">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="500"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="singers"
              DTS:DTSID="{8902E785-0A0B-4A1B-BABC-B2FCC5F8FE87}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="500"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="genres"
              DTS:DTSID="{AD4D4FD9-ACBF-4789-8CC3-17618992AD70}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="total_play"
              DTS:DTSID="{6A189F41-8D25-4651-94EB-C38E9F8230A8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="200"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="title"
              DTS:DTSID="{289EB33D-057C-4E55-AA34-83E8A2F508C8}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{97F3A645-5304-4D6C-A4DD-54D07418D908}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DateFromFile">
      <DTS:VariableValue
        DTS:DataType="7">12/17/2015 4:59:01 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB3B0D98-084A-4AFC-9FEE-06FAEA2407F9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FinishedFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\Proj\Git\songdw\__dobi\finished</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{62A132EA-3484-4D5B-9B51-8CE716E23786}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::SourceFolder] + &quot;\\&quot; + @[User::SourceCsvFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullCsvFilePath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Proj\Git\songdw\__dobi\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9494D8A8-9484-4CEB-B9C4-06DE99456574}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FinishedFolder]  + &quot;\\&quot; + @[User::SourceCsvFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullFinisheCsvFilePath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Proj\Git\songdw\__dobi\finished\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0789E629-E573-4776-86CE-E3A77AFF75C6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MaxErrorLoopCsv">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4DF11CF0-794E-4DA2-9347-D3AF5BFE4853}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PageId">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{322E9D1F-BBF6-4E26-8148-502840458206}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PageShortName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC7D45F5-4561-4D52-BDF9-267E1408C689}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceCsvFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3DB64A14-0EB9-4F7D-83A2-78EAD859778F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\Proj\Git\songdw\__dobi</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Import Source Pages If Not Exists"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{31438C58-EBB7-4C75-80B8-638CD41BC2A6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Source Pages If Not Exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F1C3BEF1-92F2-4D71-AB01-87DDFECFBD28}"
          SQLTask:SqlStatementSource="USE [SONG]&#xA;&#xA;DECLARE @tmp [bigint]&#xA;&#xA;EXECUTE usp_InsertPageIfNotExist 'zing', 'Zing Mp3', 'http://mp3.zing.vn', @tmp OUT&#xA;EXECUTE usp_InsertPageIfNotExist 'nct', 'Nhaccuatui', 'http://nhaccuatui.com', @tmp OUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert Data From Csv Files Into Datasource"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach source csv files"
      DTS:DTSID="{d1fff5af-b2f4-423c-b4af-acaa15daaa2a}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Insert Data From Csv Files Into Datasource">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{6b472d35-2a2b-4494-8a62-486c491ee4fa}"
        DTS:ObjectName="{872A95E7-A797-4CE6-8764-1C6AC971A495}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::SourceFolder]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileNameRetrieval">@[User::SourceCsvFileName]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="D:\Proj\Git\songdw\__dobi" />
            <FEFEProperty
              FileSpec="*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="MaximumErrorCount">@[User::MaxErrorLoopCsv]</DTS:PropertyExpression>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Insert Data From Csv Files Into Datasource\Get Info From Filename"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{DE24A22D-EFA1-4BB8-82A8-111489BC1204}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Info From Filename"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_dcb92c5d0ece4912a6ce3ba241a1d5f4"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::SourceCsvFileName"
              ReadWriteVariables="User::DateFromFile,User::PageShortName">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text.RegularExpressions;
using System.Globalization;
#endregion

namespace ST_dcb92c5d0ece4912a6ce3ba241a1d5f4
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string sourceCsvFileName = Dts.Variables["User::SourceCsvFileName"].Value.ToString();
            Regex csvRegex = new Regex(@"(\d+)(\w+).csv");
            var match = csvRegex.Match(sourceCsvFileName);
            string dateString = match.Groups[1].Value;
            string shortName = match.Groups[2].Value;
            Dts.Variables["User::DateFromFile"].Value = DateTime.ParseExact(dateString, "yyyyMMdd", CultureInfo.InvariantCulture);
            Dts.Variables["User::PageShortName"].Value = shortName;
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_dcb92c5d0ece4912a6ce3ba241a1d5f4</msb:CodeName>
		<msb:DisplayName>ST_dcb92c5d0ece4912a6ce3ba241a1d5f4</msb:DisplayName>
		<msb:ProjectId>{86385EA0-4FE0-4D97-AD7E-4EFA69ED89AB}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.Properties.Settings.get_Default():ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.Properties.Sett" +
    "ings")]

namespace ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8eeecb73-5654-4b3a-8725-dfb88e6f6de2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_dcb92c5d0ece4912a6ce3ba241a1d5f4</RootNamespace>
    <AssemblyName>ST_dcb92c5d0ece4912a6ce3ba241a1d5f4</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_dcb92c5d0ece4912a6ce3ba241a1d5f4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_dcb92c5d0ece4912a6ce3ba241a1d5f4")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_dcb92c5d0ece4912a6ce3ba241a1d5f4.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALJSeFYAAAAAAAAAAOAAAiELAQsAABIAAAAGAAAAAAAADjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALwvAABPAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAAEAAAAQAAAAAQAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
LwAAAAAAAEgAAAACAAUAOCIAAIQNAAABAAAAAAAAAIAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBACwAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKcqMAAHBzGwAACgsHBm8cAAAKDAhvHQAAChdvHgAACm8fAAAKDQhvHQAAChhvHgAACm8fAAAK
EwQCKBYAAApvFwAACnLBAABwbxgAAAoJcucAAHAoIAAACighAAAKjCMAAAFvIgAACgIoFgAACm8X
AAAKcvkAAHBvGAAAChEEbyIAAAoCKBYAAAoWbyMAAAoqHgIoJAAACiq0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAGAQAACN+AACEBAAARAYAACNTdHJpbmdz
AAAAAMgKAAAkAQAAI1VTAOwLAAAQAAAAI0dVSUQAAAD8CwAAiAEAACNCbG9iAAAAAAAAAAIAAAFX
HaIBCQMAAAD6JTMAFgAAAQAAACQAAAAFAAAABgAAAAkAAAABAAAAJAAAAAIAAAAPAAAAAgAAAAIA
AAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZ
AboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3AC
BgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgDgA80DBgD9A7oABgACBLoABgAmBHACCgBS
BDwECgBrBDwEBgCABG8DDgCiBBQBDgDEBBQBEgAdBf0EEgA1Bf0ECgB5BVoFCgB/BVoFCgCFBVoF
CgCgBVoFCgCmBVoFBgDDBboABgDMBboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABr
ADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYG
HwJHAFaAJwJKAFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYmwSJAAIA
vCAAAAAAhgAaAhsAAgB4IQAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFY
AFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkA
vAEbAKEAFARiAKEALwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA1gSNANkAJwWS
AOEAPgWXAOkARwWdAAkAUQWhAPEAvAFYAPEAfwWlAPkAlQWrAAEBPgWxABEBRwWhADEArgUkABkB
3AW4AOkA5wXDANkA8QVdABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwBDAS4AIwBDAS4AYwBp
AS4ACwDSAC4AEwAaAS4AMwAaAS4AKwBDAS4AOwBJAS4AQwBDAS4AWwBgAUMAawBTAEkAkwCAAGEA
mwBTAIMAqwBTAHUAyAACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAF
AAIABQAHAASAAAABAAAAyhZREQAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAA
AAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAALAAAAAAAAAAAAAAAKAN4EAAAAAAAAAAAB
AAAAAAYAAAUABAAAAAA8TW9kdWxlPgBTVF9kY2I5MmM1ZDBlY2U0OTEyYTZjZTNiYTI0MWExZDVm
NC5kbGwAUmVzb3VyY2VzAFNUX2RjYjkyYzVkMGVjZTQ5MTJhNmNlM2JhMjQxYTFkNWY0LlByb3Bl
cnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9kY2I5MmM1ZDBlY2U0OTEyYTZjZTNiYTI0MWEx
ZDVmNABTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVz
b3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJl
AC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVy
ZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2Vz
cwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1
cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5
AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3Rv
cgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0
X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRf
VmFsdWUAVG9TdHJpbmcAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFJlZ2V4AE1hdGNo
AEdyb3VwQ29sbGVjdGlvbgBnZXRfR3JvdXBzAEdyb3VwAENhcHR1cmUAZ2V0X0ludmFyaWFudEN1
bHR1cmUARGF0ZVRpbWUASUZvcm1hdFByb3ZpZGVyAFBhcnNlRXhhY3QAc2V0X1ZhbHVlAHNldF9U
YXNrUmVzdWx0AFNUX2RjYjkyYzVkMGVjZTQ5MTJhNmNlM2JhMjQxYTFkNWY0LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwBkAGMAYgA5ADIAYwA1AGQAMABlAGMAZQA0ADkA
MQAyAGEANgBjAGUAMwBiAGEAMgA0ADEAYQAxAGQANQBmADQALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAC9VAHMAZQByADoAOgBTAG8AdQByAGMAZQBDAHMAdgBGAGkA
bABlAE4AYQBtAGUAAB0oAFwAZAArACkAKABcAHcAKwApAC4AYwBzAHYAACVVAHMAZQByADoAOgBE
AGEAdABlAEYAcgBvAG0ARgBpAGwAZQAAEXkAeQB5AHkATQBNAGQAZAAAJ1UAcwBlAHIAOgA6AFAA
YQBnAGUAUwBoAG8AcgB0AE4AYQBtAGUAAAAAADmXTtaMkelIlhT5U2OVkBMACLd6XFYZNOCJCImE
Xc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAAS
DAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQER
YQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAMgAA4FIAESfQ4FIAASgIEGIAESgIUI
CgADEYCNDg4SgJEEIAEBHAkHBQ4SeRJ9Dg5HAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjAB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfZGNiOTJjNWQw
ZWNlNDkxMmE2Y2UzYmEyNDFhMWQ1ZjQAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAeQvAAAAAAAAAAAAAP4vAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADwLwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAApAMAAAAAAAAAAAAApAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAFERyhYAAAEAURHKFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBAQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOACAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBkAGMAYgA5ADIAYwA1AGQAMABlAGMAZQA0ADkAMQAyAGEANgBjAGUAMwBiAGEAMgA0ADEAYQAx
AGQANQBmADQAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA4ADMA
NAAuADQANAAzADMAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGQAYwBi
ADkAMgBjADUAZAAwAGUAYwBlADQAOQAxADIAYQA2AGMAZQAzAGIAYQAyADQAMQBhADEAZAA1AGYA
NAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA1AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfAGQAYwBiADkAMgBjADUAZAAwAGUAYwBlADQAOQAxADIAYQA2AGMAZQAz
AGIAYQAyADQAMQBhADEAZAA1AGYANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwBkAGMAYgA5ADIAYwA1AGQAMABlAGMAZQA0ADkAMQAyAGEANgBjAGUAMwBi
AGEAMgA0ADEAYQAxAGQANQBmADQAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOAAzADQALgA0ADQAMwAzAAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANQA4ADMANAAuADQANAAzADMAAAAAAAAAADAAAAwAAAAQMAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{04A58EBC-0FA8-437C-879F-A5FA52826053}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Data into Database"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source"
                  componentClassID="{D23FD76B-F51D-420F-BBCB-19CBF6AC1AB4}"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Csv Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Csv File Connection]"
                      connectionManagerRefId="Package.ConnectionManagers[Csv File Connection]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[singers]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].ExternalColumns[singers]"
                          length="500"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[singers]"
                          name="singers"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[genres]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].ExternalColumns[genres]"
                          length="500"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[genres]"
                          name="genres"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[total_play]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].ExternalColumns[total_play]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[total_play]"
                          name="total_play"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[title]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].ExternalColumns[title]"
                          length="200"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[title]"
                          name="title"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].ExternalColumns[singers]"
                          dataType="wstr"
                          length="500"
                          name="singers" />
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].ExternalColumns[genres]"
                          dataType="wstr"
                          length="500"
                          name="genres" />
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].ExternalColumns[total_play]"
                          dataType="i8"
                          name="total_play" />
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].ExternalColumns[title]"
                          dataType="wstr"
                          length="200"
                          name="title" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="65001"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column"
                  componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[pageId]"
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[pageId]"
                          name="pageId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::PageId]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::PageId]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[date]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[date]"
                          name="date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::DateFromFile]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::DateFromFile]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[genreId]"
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[genreId]"
                          name="genreId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">0L</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">0L</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[singerId]"
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[singerId]"
                          name="singerId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">0L</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">0L</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[songId]"
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[songId]"
                          name="songId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">0L</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">0L</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist"
                  componentClassID="{93FFEC66-CBC8-4C7F-9C6A-CB1C17A7567D}"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Insert To Genre If Not Exist"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">EXECUTE [dbo].[usp_InsertGenreIfNotExist] ?, ? OUTPUT</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Connections[OleDbConnection]"
                      connectionManagerID="{F1C3BEF1-92F2-4D71-AB01-87DDFECFBD28}:external"
                      connectionManagerRefId="Project.ConnectionManagers[SongDataSource]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Inputs[OLE DB Command Input].Columns[genres]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="genres"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@genre]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[genres]" />
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Inputs[OLE DB Command Input].Columns[genreId]"
                          cachedDataType="i8"
                          cachedName="genreId"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@id]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[genreId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@genre]"
                          dataType="wstr"
                          length="50"
                          name="@genre">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@id]"
                          dataType="i8"
                          name="@id">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">83</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist"
                  componentClassID="{93FFEC66-CBC8-4C7F-9C6A-CB1C17A7567D}"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Insert To HitStatictis If Not Exist"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">EXECUTE [dbo].[usp_InsertHitStatictisIfNotExist] ?, ?, ?, ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Connections[OleDbConnection]"
                      connectionManagerID="{F1C3BEF1-92F2-4D71-AB01-87DDFECFBD28}:external"
                      connectionManagerRefId="Project.ConnectionManagers[SongDataSource]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].Columns[songId]"
                          cachedDataType="i8"
                          cachedName="songId"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@songId]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[songId]" />
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].Columns[pageId]"
                          cachedDataType="i8"
                          cachedName="pageId"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@pageId]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[pageId]" />
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].Columns[total_play]"
                          cachedDataType="i8"
                          cachedName="total_play"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@hitCount]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[total_play]" />
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].Columns[date]"
                          cachedDataType="date"
                          cachedName="date"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@date]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[date]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@songId]"
                          dataType="i8"
                          name="@songId">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@pageId]"
                          dataType="i8"
                          name="@pageId">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@hitCount]"
                          dataType="i4"
                          name="@hitCount">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@date]"
                          dataType="dbDate"
                          name="@date">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist"
                  componentClassID="{93FFEC66-CBC8-4C7F-9C6A-CB1C17A7567D}"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Insert To Singer If Not Exist"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">EXECUTE [dbo].[usp_InsertSingerIfNotExist] ?, ?, ? OUTPUT</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Connections[OleDbConnection]"
                      connectionManagerID="{F1C3BEF1-92F2-4D71-AB01-87DDFECFBD28}:external"
                      connectionManagerRefId="Project.ConnectionManagers[SongDataSource]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input].Columns[IsGroup]"
                          cachedDataType="bool"
                          cachedName="IsGroup"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@isgroup]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers.Outputs[Output 0].Columns[IsGroup]" />
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input].Columns[singers]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="singers"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@name]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[singers]" />
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input].Columns[singerId]"
                          cachedDataType="i8"
                          cachedName="singerId"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@id]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[singerId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@name]"
                          dataType="wstr"
                          length="500"
                          name="@name">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@isgroup]"
                          dataType="bool"
                          name="@isgroup">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@id]"
                          dataType="i8"
                          name="@id">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">83</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist"
                  componentClassID="{93FFEC66-CBC8-4C7F-9C6A-CB1C17A7567D}"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Insert To Song If Not Exist"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">EXECUTE [dbo].[usp_InsertSongIfNotExist] ?, ?, ?, ? OUTPUT</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Connections[OleDbConnection]"
                      connectionManagerID="{F1C3BEF1-92F2-4D71-AB01-87DDFECFBD28}:external"
                      connectionManagerRefId="Project.ConnectionManagers[SongDataSource]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].Columns[title]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="title"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@title]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[title]" />
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].Columns[singerId]"
                          cachedDataType="i8"
                          cachedName="singerId"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@singerId]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[singerId]" />
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].Columns[genreId]"
                          cachedDataType="i8"
                          cachedName="genreId"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@genreId]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[genreId]" />
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].Columns[songId]"
                          cachedDataType="i8"
                          cachedName="songId"
                          externalMetadataColumnId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@id]"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output].Columns[songId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@title]"
                          dataType="wstr"
                          length="200"
                          name="@title">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@singerId]"
                          dataType="i8"
                          name="@singerId">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@genreId]"
                          dataType="i8"
                          name="@genreId">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input].ExternalColumns[@id]"
                          dataType="i8"
                          name="@id">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">83</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Genre"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Tranform Genre"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Linq;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if (Row.genres_IsNull || string.IsNullOrWhiteSpace(Row.genres.Trim()))
        {
            Row.genres = "v.a";
        }
        else
        {
            string genres = Row.genres.ToLower().Trim();
            string[] split = genres.Split(',').Select(x => x.Trim()).ToArray();
            Row.genres = Transform(split);
        }
    }

    /// <summary>
    /// De cho don gian ham chi lay 1 the loai trong nhieu the loai (neu co)
    /// </summary>
    string Transform(string[] genres)
    {
        if (genres.Contains("nhạc trẻ"))
        {
            return "nhạc trẻ";
        }
        else if (genres.Contains("nhạc việt") ||
            genres.Contains("việt nam") ||
            genres.Contains("v-pop") ||
            genres.Contains("vpop"))
        {
            return "nhạc Việt";
        }
        else if(genres.Contains("nhạc hàn") ||
            genres.Contains("hàn quốc") ||
            genres.Contains("kpop") ||
            genres.Contains("k-pop"))
        {
            return "nhạc Hàn";
        }
        else if (genres.Contains("nhạc nhật") ||
            genres.Contains("nhật bản") ||
            genres.Contains("j-pop") ||
            genres.Contains("jpop"))
        {
            return "nhạc Nhật";
        }
        else if (genres.Contains("nhạc hoa") ||
            genres.Contains("trung quốc") ||
            genres.Contains("nhạc trung quốc"))
        {
            return "nhạc Hoa";
        }
        else if (genres.Contains("us/uk") ||
            genres.Contains("us-uk") ||
            genres.Contains("âu mỹ") ||
            genres.Contains("âu/mỹ"))
        {
            return "nhạc Âu/Mỹ";
        }
        else if (genres.Length == 0 ||
             genres.Contains("v.a") ||
             genres.Contains("tui hát"))
        {
            return "v.a";
        }
        else if (genres.Contains("không lời") ||
            genres.Contains("hòa tấu") ||
            genres.Contains("nhạc không lời") ||
            genres.Contains("nhạc hòa tấu"))
        {
            return "nhạc không lời";
        }
        else
            return genres[0];
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String genres
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool genres_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6b6871d19cb84172bed502dc67f2f53d.Properties.Settings.get_Default():SC_6b6871d19cb84172bed502dc67f2f53d.Properties.Sett" +
    "ings")]

namespace SC_6b6871d19cb84172bed502dc67f2f53d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_6b6871d19cb84172bed502dc67f2f53d.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{dad05f7b-a844-4664-9fb4-56bb4b0a7271}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_6b6871d19cb84172bed502dc67f2f53d</RootNamespace>
    <AssemblyName>SC_6b6871d19cb84172bed502dc67f2f53d</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_6b6871d19cb84172bed502dc67f2f53d" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_6b6871d19cb84172bed502dc67f2f53d</msb:CodeName>
		<msb:DisplayName>SC_6b6871d19cb84172bed502dc67f2f53d</msb:DisplayName>
		<msb:ProjectId>{82757222-13F5-42DE-8050-030EBEA69E2D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_6b6871d19cb84172bed502dc67f2f53d.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_6b6871d19cb84172bed502dc67f2f53d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_6b6871d19cb84172bed502dc67f2f53d")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6b6871d19cb84172bed502dc67f2f53d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6b6871d19cb84172bed502dc67f2f53d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6b6871d19cb84172bed502dc67f2f53d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_6b6871d19cb84172bed502dc67f2f53d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_6b6871d19cb84172bed502dc67f2f53d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_6b6871d19cb84172bed502dc67f2f53d.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIynelYAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAATjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPg3AABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
OAAAAAAAAEgAAAACAAUAkCQAAGgTAAABAAAAAAAAANgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMSAAAGfQEAAAQCAnMTAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCwAABm8DAAAGKkorBwIDbwQAAAYDbxAAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioeAm8UAAAKKgAAEzAEAIAAAAABAAARA28OAAAGLRIDbwwAAAZvFAAACigV
AAAKLAwDchEAAHBvDQAABioDbwwAAAZvFgAACm8UAAAKCgYXjRoAAAEMCBYfLJ0IbxcAAAp+AwAA
BC0RFP4GCgAABnMYAAAKgAMAAAR+AwAABCgBAAArKAIAACsLAwIHKAgAAAZvDQAABioDMAIAiwEA
AAAAAAADchkAAHAoAwAAKywGchkAAHAqA3IrAABwKAMAACstJwNyPwAAcCgDAAArLRoDclEAAHAo
AwAAKy0NA3JdAABwKAMAACssBnJnAABwKgNyewAAcCgDAAArLScDco0AAHAoAwAAKy0aA3KfAABw
KAMAACstDQNyqQAAcCgDAAArLAZytQAAcCoDcscAAHAoAwAAKy0nA3LbAABwKAMAACstGgNy7QAA
cCgDAAArLQ0DcvkAAHAoAwAAKywGcgMBAHAqA3IXAQBwKAMAACstGgNyKQEAcCgDAAArLQ0Dcj8B
AHAoAwAAKywGcl8BAHAqA3JxAQBwKAMAACstJwNyfQEAcCgDAAArLRoDcokBAHAoAwAAKy0NA3KV
AQBwKAMAACssBnKhAQBwKgOOaSwaA3IRAABwKAMAACstDQNytwEAcCgDAAArLAZyEQAAcCoDcscB
AHAoAwAAKy0nA3LbAQBwKAMAACstGgNy6wEAcCgDAAArLQ0DcgkCAHAoAwAAKywGcusBAHAqAxaa
Kh4CKAEAAAYqKgIDBAUoHAAACipSAnsdAAAKAnseAAAKFpRvHwAACiomAhYDKCAAAAoqIgIWKCEA
AAoqWgMsCAIWKCIAAAoqciMCAHBzIwAACnoeAigkAAAKKh4CKCUAAAoqOgIoJgAACgIDfQQAAAQq
OgIoJgAACgIDfQUAAAQqHgIoJgAACioAEzACAC0AAAACAAARfgYAAAQtIHLAAgBw0AcAAAIoKAAA
Cm8pAAAKcyoAAAoKBoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKi5zGQAABoAIAAAE
Kh4CKCwAAAoqAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAADAYAACN+AAB4BgAAnAcAACNTdHJpbmdzAAAAABQOAAA0AwAAI1VTAEgRAAAQAAAAI0dV
SUQAAABYEQAAEAIAACNCbG9iAAAAAAAAAAIAAAFXFaIJCQkAAAD6JTMAFgAAAQAAACMAAAAIAAAA
CAAAABoAAAARAAAALAAAABEAAAACAAAAAwAAAAUAAAAIAAAAAQAAAAEAAAAFAAAAAQAAAAMAAAAA
AAoAAQAAAAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgBwAl8CCgChAowC
CgB6A2ADCgClA5MDCgC8A5MDCgDZA5MDCgD4A5MDCgARBJMDCgAqBJMDCgBFBJMDCgBgBJMDCgB5
BJMDCgCyBJIECgDSBJIECgAUBRQBCgAbBRQBBgBEBc0ACgCKBRQBCgC4BZIECgDzBRQBFgAWBgoG
CgA8BiEGCgCEBhQBCgCxBp4GCgDOBhQBCgDTBhQBCgD3BpMDDgAjBw0HDgA8Bw0HAAAAAAEAAAAA
AAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAADAAUAAQAQAEsAAAAJAAQACwABABAAWAAAAA0A
BAASAAEAEABkAAAADQAFABMAAAAQAG4AeAANAAYAFAAAARAApwB4ABEACAAYAAYAWAATAAYAZAAX
ABEAkQWvAAEATwJZAAEATwJZABEAgAJjABEArQJnABEA8QKFAFAgAAAAAIYYTwEbAAEAcCAAAAAA
xgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYBtAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADG
ANYBGwAHAMQgAAAAAMYAtAEpAAcAUCEAAAAAgQDiAS8ACADnIgAAAACGGE8BGwAJALogAAAAAJEA
awWqAAkA7yIAAAAAhhhPATUACgD6IgAAAACGCOwBPwANAA8jAAAAAIYI9wFDAA0AGSMAAAAAhggC
AkgADgAiIwAAAACGCBQCTAAOADkjAAAAAIYAJgJIAA8AQSMAAAAAhgAuAkgADwBJIwAAAACGGE8B
XQAPAFgjAAAAAIYYTwFdABAAZyMAAAAAgxhPARsAEQBwIwAAAACTCL0CawARAKkjAAAAAJMI0QJw
ABEAsCMAAAAAkwjdAnUAEQC4IwAAAACWCAEDiQASAMsjAAAAAIYYTwEbABIAvyMAAAAAkRhRB1YB
EgAAAAEAFQMAAAIAHQMAAAMAJwMAAAQALgMAAAEAJwMAAAEAOAMAAAEAOAMAAAEAOgIAAAEAiAUA
AAEAJwMAAAIAPAMAAAMALgMAAAEAUAMAAAEAUAMAAAEAVgMAAAEAVgMAAAEAUANJAE8BQwBRAE8B
QwBZAE8BQwBhAE8BQwBpAE8BQwBxAE8BQwB5AE8BQwCBAE8BQwCJAE8BQwCRAE8BQwCZAE8BkwCh
AE8BGwAJAE8BGwCpACwFmAAJADMFnwC5AE8BGwAJAMsBGwAJANYBGwDJAE8BGwCpANMFPwCpANgF
twCpAOsFPwCpAPgFvAAMAE8BygDZAEoG0ADZAFEG7QDZAFkGBgERAE8BNQARACcDEwERADwDFwEp
AGIGGwERAGwGIAERAHUGJgERAHwGkwDpAE8BQwARACYCSAARAC4CSAAZAE8BGwDxAE8BGwD5AOUG
KwH5AAAHMwE5AE8BOQERAU8BRgEhAE8BGwAuABMAogEuAGMA8QEuAAsAWgEuACsAywEuABsAywEu
ACMAywEuADsA0QEuAFsA6AEuADMAogEuAEMAywFhAJsApQBjAIMApQBpAFsBTQGJAFsBTQHjADsB
pQABAZsApQBAAZsApQD+AEEBBAABAAcAAwAIAAUAAAA6AlEAAABBAlUAAABwAnsAAADpAoAAAAAN
A44AAgAMAAMAAQANAAMAAQAPAAUAAgAOAAUAAgAVAAcAAgAWAAkAAQAXAAkAAgAYAAsAwwAEgAAA
AQAAAMsW/pIAAAAAAADwBAAACwAAAAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsBAAAA
AAQAAAAAAAAAAAAAAAoAFAEAAAAACwAAAAAAAAAAAAAAAQBVAQAAAAAEAAAAAAAAAAAAAAAKAP4F
AAAAAAAAAAABAAAAWAcAADMA6AA1APoANwD6AAAAADxNb2R1bGU+AFNDXzZiNjg3MWQxOWNiODQx
NzJiZWQ1MDJkYzY3ZjJmNTNkLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQwQnVm
ZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNmI2ODcxZDE5Y2I4NDE3MmJl
ZDUwMmRjNjdmMmY1M2QuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4
U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVudABT
Y3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1dDBfUHJv
Y2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBU
cmFuc2Zvcm0AZ2V0X2dlbnJlcwBzZXRfZ2VucmVzAGdldF9nZW5yZXNfSXNOdWxsAHNldF9nZW5y
ZXNfSXNOdWxsAE5leHRSb3cARW5kT2ZSb3dzZXQAZ2VucmVzAGdlbnJlc19Jc051bGwAUGFyZW50
Q29tcG9uZW50AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5
c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1dE5hbWUAQnVmZmVyAE91dHB1dE1hcABS
b3cAQnVmZmVyQ29sdW1uSW5kZXhlcwB2YWx1ZQBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1
dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzZiNjg3MWQxOWNiODQx
NzJiZWQ1MDJkYzY3ZjJmNTNkAFN0cmluZwBTdHJpbmdDb21wYXJpc29uAEVxdWFscwBHZXRDb2x1
bW5JbmRleGVzAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlADxJbnB1dDBf
UHJvY2Vzc0lucHV0Um93PmJfXzAAeABGdW5jYDIAQ1MkPD45X19DYWNoZWRBbm9ueW1vdXNNZXRo
b2REZWxlZ2F0ZTEAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUAVHJpbQBJc051bGxPcldoaXRl
U3BhY2UAVG9Mb3dlcgBDaGFyAFNwbGl0AFN5c3RlbS5Db3JlAFN5c3RlbS5MaW5xAEVudW1lcmFi
bGUAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMASUVudW1lcmFibGVgMQBTZWxlY3QAVG9BcnJh
eQBDb250YWlucwBHZXRTdHJpbmcAc2V0X0l0ZW0ASXNOdWxsAFNldE51bGwASW52YWxpZE9wZXJh
dGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdl
dF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAC5jY3RvcgBTQ182YjY4NzFkMTljYjg0MTcyYmVkNTAyZGM2
N2YyZjUzZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAPSQBuAHAAdQB0ACAAMAAA
B3YALgBhAAARbgBoAKEeYwAgAHQAcgC7HgETbgBoAKEeYwAgAHYAaQDHHnQAARF2AGkAxx50ACAA
bgBhAG0AAQt2AC0AcABvAHAAAQl2AHAAbwBwAAATbgBoAKEeYwAgAFYAaQDHHnQAARFuAGgAoR5j
ACAAaADgAG4AARFoAOAAbgAgAHEAdQDRHmMAAQlrAHAAbwBwAAALawAtAHAAbwBwAAERbgBoAKEe
YwAgAEgA4ABuAAETbgBoAKEeYwAgAG4AaACtHnQAARFuAGgArR50ACAAYgCjHm4AAQtqAC0AcABv
AHAAAQlqAHAAbwBwAAATbgBoAKEeYwAgAE4AaACtHnQAARFuAGgAoR5jACAAaABvAGEAARV0AHIA
dQBuAGcAIABxAHUA0R5jAAEfbgBoAKEeYwAgAHQAcgB1AG4AZwAgAHEAdQDRHmMAARFuAGgAoR5j
ACAASABvAGEAAQt1AHMALwB1AGsAAAt1AHMALQB1AGsAAQviAHUAIABtAPkeAQviAHUALwBtAPke
ARVuAGgAoR5jACAAwgB1AC8ATQD5HgEPdAB1AGkAIABoAOEAdAABE2sAaAD0AG4AZwAgAGwA3R5p
AAEPaADyAGEAIAB0AKUedQABHW4AaAChHmMAIABrAGgA9ABuAGcAIABsAN0eaQABGW4AaAChHmMA
IABoAPIAYQAgAHQApR51AAGAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4A
bgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABh
ACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQA
LgAAcVMAQwBfADYAYgA2ADgANwAxAGQAMQA5AGMAYgA4ADQAMQA3ADIAYgBlAGQANQAwADIAZABj
ADYANwBmADIAZgA1ADMAZAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAACyxJhvWsfcQpvrjJLrLquiAAiJhF3NgIDMkQi3elxWGTTgiQMGEhQDBhIYAyAAAQkgBAEI
DhIVEhkFIAEBEhAFIAEOHQ4JIAMBEhUdCBIZAyAADgQgAQEOAyAAAgQgAQECAygADgMoAAIDBhIF
BSABARIFAwYSHQMGEiEEAAASHQQAABIhBQABARIhBAgAEh0ECAASIQMGEiAEAAASIAQIABIgBCAB
AQgGIAICDhFZBSABHQgIBAEAAAAEAAEODgcGFRJhAg4OBAABAg4GIAEdDh0DBhUSYQIODgUgAgEc
GBcQAgIVEnEBHgEVEnEBHgAVEmECHgAeAQQKAg4ODBABAR0eABUScQEeAAMKAQ4HBwMOHQ4dAwwQ
AQICFRJxAR4AHgADBhIVAwYdCAQgAQ4IBSACAQgcBCABAggHAAESfRGAgQUgABKAhQcgAgEOEoCF
BAcBEh0GIAEBEYCNCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ182YjY4NzFkMTlj
Yjg0MTcyYmVkNTAyZGM2N2YyZjUzZAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE1AAAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBIDgAAAAAAAAAAAAAPjgAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAADA4AAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUu
ZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA/pLLFgAAAQD+kssWPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAw
ADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADYA
YgA2ADgANwAxAGQAMQA5AGMAYgA4ADQAMQA3ADIAYgBlAGQANQAwADIAZABjADYANwBmADIAZgA1
ADMAZAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADgAMwA1AC4A
MwA3ADYAMwAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADYAYgA2
ADgANwAxAGQAMQA5AGMAYgA4ADQAMQA3ADIAYgBlAGQANQAwADIAZABjADYANwBmADIAZgA1ADMA
ZAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA1AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAQwBfADYAYgA2ADgANwAxAGQAMQA5AGMAYgA4ADQAMQA3ADIAYgBlAGQANQAw
ADIAZABjADYANwBmADIAZgA1ADMAZAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAEMAXwA2AGIANgA4ADcAMQBkADEAOQBjAGIAOAA0ADEANwAyAGIAZQBkADUAMAAy
AGQAYwA2ADcAZgAyAGYANQAzAGQAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOAAzADUALgAzADcANgAzADAAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAAzADUALgAzADcANgAzADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAUDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_6b6871d19cb84172bed502dc67f2f53d</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">a9c8994be4acb8e53bfc6cc4bd128ec5</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Genre.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Genre.Inputs[Input 0].Columns[genres]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="genres"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[genres]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Genre.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Genre.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Tranform Performers"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_30db04a243444e97b87ecedcf7581075")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_30db04a243444e97b87ecedcf7581075")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Linq;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        string[] split = Row.singers.Split(',');
        var sorted = split.Select(x => x.Trim()).OrderBy(x => x);
        Row.singers = string.Join(", ", sorted);
        Row.IsGroup = split.Length > 1;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String singers
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool singers_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsGroup
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IsGroup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_30db04a243444e97b87ecedcf7581075.Properties.Settings.get_Default():SC_30db04a243444e97b87ecedcf7581075.Properties.Sett" +
    "ings")]

namespace SC_30db04a243444e97b87ecedcf7581075.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_30db04a243444e97b87ecedcf7581075</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_30db04a243444e97b87ecedcf7581075</msb:DisplayName>
		<msb:ProjectId>{AA70183C-BAE7-4728-95AF-202CF8CB9AF7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_30db04a243444e97b87ecedcf7581075.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_30db04a243444e97b87ecedcf7581075.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ab1abc14-ab19-4ae1-92da-7579eb31dbef}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_30db04a243444e97b87ecedcf7581075</RootNamespace>
    <AssemblyName>SC_30db04a243444e97b87ecedcf7581075</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_30db04a243444e97b87ecedcf7581075" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_30db04a243444e97b87ecedcf7581075.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_30db04a243444e97b87ecedcf7581075.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_30db04a243444e97b87ecedcf7581075.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_30db04a243444e97b87ecedcf7581075.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_30db04a243444e97b87ecedcf7581075.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_30db04a243444e97b87ecedcf7581075.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANh9elYAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAjjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEA1AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
NQAAAAAAAEgAAAACAAUAICMAACASAAABAAAAAAAAAGgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMUAAAGfQEAAAQCAnMVAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCwAABm8DAAAGKkorBwIDbwQAAAYDbxIAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioeAm8UAAAKKgoCKgAAABMwBAB9AAAAAQAAEQNvDAAABheNGgAAAQwIFh8s
nQhvFQAACgoGfgMAAAQtERT+BgkAAAZzFgAACoADAAAEfgMAAAQoAQAAK34EAAAELREU/gYKAAAG
cxYAAAqABAAABH4EAAAEKAIAACsLA3IRAABwBygZAAAKbw0AAAYDBo5pF/4CbxAAAAYqHgIoAQAA
BioqAgMEBSgaAAAKKlICexsAAAoCexwAAAoWlG8dAAAKKiYCFgMoHgAACioiAhYoHwAACipaAywI
AhYoIAAACipyFwAAcHMhAAAKejoCFwOMHwAAASgeAAAKKloDLAgCFyggAAAKKnIXAABwcyEAAAp6
HgIoIgAACioeAigjAAAKKjoCKCQAAAoCA30FAAAEKjoCKCQAAAoCA30GAAAEKh4CKCQAAAoqABMw
AgAtAAAAAgAAEX4HAAAELSBytAAAcNAHAAACKCYAAApvJwAACnMoAAAKCgaABwAABH4HAAAEKhp+
CAAABCoeAoAIAAAEKhp+CQAABCoucxsAAAaACQAABCoeAigqAAAKKgAAAAAAtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFwGAAAjfgAAyAYAABAIAAAjU3Ry
aW5ncwAAAADYDgAAKAEAACNVUwAAEAAAEAAAACNHVUlEAAAAEBAAABACAAAjQmxvYgAAAAAAAAAC
AAABVxWiCQkJAAAA+iUzABYAAAEAAAAlAAAACAAAAAkAAAAcAAAAEwAAACoAAAATAAAAAgAAAAMA
AAAHAAAACgAAAAEAAAABAAAABQAAAAEAAAACAAAAAAAKAAEAAAAAAAYA7gDNAAYA/gDNAAoAGwEU
AQ4ANwEiARIAdgHNAAYAhQHNAAoAogKRAgoA0wK+AgoArAOSAwoA1wPFAwoA7gPFAwoACwTFAwoA
KgTFAwoAQwTFAwoAXATFAwoAdwTFAwoAkgTFAwoAqwTFAwoA5ATEBAoABAXEBAoARgUUAQoATQUU
AQYAdgXNAAoAvAUUAQoA6gXEBAoATgYUARYAcQZlBgoAlwZ8BhYArAZlBgoA8AYUAQoACgcUAQoA
JQcSBwoAQgcUAQoARwcUAQoAawfFAw4AlweBBw4AsAeBBwAAAAABAAAAAAABAAEAAQAQADIAAAAF
AAEAAQABABAAQAAAAAgAAwAFAAEAEABLAAAACQAFAAsAAQAQAFgAAAANAAUAFAABABAAZAAAAA0A
BgAVAAAAEABuAHgADQAHABYAAAEQAKcAeAARAAkAGgAGAFgAEwAGAGQAFwARAMMFqQARACIGqQAB
AIECUwABAIECUwARALICXQARAN8CYQARACMDfwBQIAAAAACGGE8BGwABAHAgAAAAAMYAkwEfAAEA
lSAAAAAAxgGgASkABQCoIAAAAADGAbQBKQAGAKogAAAAAMYAywEbAAcAsiAAAAAAxgDWARsABwDI
IAAAAADGALQBKQAHAFEhAAAAAIYYTwEbAAgAuiAAAAAAkQCdBaQACADCIAAAAACRAAUGpAAJAFkh
AAAAAIYYTwEvAAoAZCEAAAAAhgjiATkADQB5IQAAAACGCO4BPQANAIMhAAAAAIYI+gFCAA4AjCEA
AAAAhggNAkYADgCjIQAAAACGCCACRgAPALIhAAAAAIYILAJGABAAySEAAAAAhgA/AkIAEQDRIQAA
AACGAEcCQgARANkhAAAAAIYYTwFXABEA6CEAAAAAhhhPAVcAEgD3IQAAAACDGE8BGwATAAAiAAAA
AJMI7wJlABMAOSIAAAAAkwgDA2oAEwBAIgAAAACTCA8DbwATAEgiAAAAAJYIMwODABQAWyIAAAAA
hhhPARsAFABPIgAAAACRGMUHVAEUAAAAAQBHAwAAAgBPAwAAAwBZAwAABABgAwAAAQBZAwAAAQBq
AwAAAQBqAwAAAQC6BQAAAQC6BQAAAQBZAwAAAgBuAwAAAwBgAwAAAQCCAwAAAQCCAwAAAQCCAwAA
AQCCAwAAAQCIAwAAAQCIAwAAAQCCA0kATwE9AFEATwE9AFkATwE9AGEATwE9AGkATwE9AHEATwE9
AHkATwE9AIEATwE9AIkATwE9AJEATwE9AJkATwGNAKEATwEbAAkATwEbAKkAXgWSAAkAZQWZALkA
TwEbAAkAywEbAAkA1gEbAMkATwEbAKkASQY5AKkAUwaxAAwATwG/ANkApQbFANkAwQbiAKkAyQb6
ABEATwEvABEAWQMQAREAbgMUASkAzgYYAREA2AYdAREA4QYjAREA6AaNAPEATwE9ABEAPwJCABEA
RwJCABkATwEbAAEBTwEbAAkBWQcoAQkBdAcxATkATwE3ASEBTwFEASEATwEbAC4ACwBYAS4AYwDv
AS4AKwDJAS4AWwDmAS4AGwDJAS4AIwDJAS4AEwCgAS4AMwCgAS4AOwDPAS4AQwDJAWEAmwCfAGMA
gwCfAIEAmwCfAKkASwFLAckASwFLAeMAKwGfACABmwCfACEBmwCfAEABmwCfAAQBPwEEAAEABwAF
AAgABwAAAFMCSwAAAFsCTwAAAGoCTwAAAHICTwAAAKICdQAAABsDegAAAD8DiAACAAwAAwABAA0A
AwACAA4ABQABAA8ABQABABAABwABABEACQACABcACwACABgADQABABkADQACABoADwC4AASAAAAB
AAAAyxYkfgAAAAAAACIFAAALAAAAAAAAAAAAAAABALAAAAAAAAQAAAAAAAAAAAAAAAoACwEAAAAA
BAAAAAAAAAAAAAAACgAUAQAAAAALAAAAAAAAAAAAAAABAFUBAAAAAAQAAAAAAAAAAAAAAAoAWQYA
AAAAAAAAAAEAAADMBwAALwDdADEA3QAAAAAAADxNb2R1bGU+AFNDXzMwZGIwNGEyNDM0NDRlOTdi
ODdlY2VkY2Y3NTgxMDc1LmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQwQnVmZmVy
AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfMzBkYjA0YTI0MzQ0NGU5N2I4N2Vj
ZWRjZjc1ODEwNzUuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2Ny
aXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVudABTY3Jp
cHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9z
dABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vz
c0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBnZXRf
c2luZ2VycwBzZXRfc2luZ2VycwBnZXRfc2luZ2Vyc19Jc051bGwAc2V0X3NpbmdlcnNfSXNOdWxs
AHNldF9Jc0dyb3VwAHNldF9Jc0dyb3VwX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AHNpbmdl
cnMAc2luZ2Vyc19Jc051bGwASXNHcm91cABJc0dyb3VwX0lzTnVsbABQYXJlbnRDb21wb25lbnQA
U3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1
bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZmZXIAT3V0cHV0TWFwAFJvdwBCdWZmZXJD
b2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfMzBkYjA0YTI0MzQ0NGU5N2I4N2VjZWRj
Zjc1ODEwNzUAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMA
U1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAPElucHV0MF9Qcm9jZXNzSW5w
dXRSb3c+Yl9fMAB4AEZ1bmNgMgBDUyQ8PjlfX0NhY2hlZEFub255bW91c01ldGhvZERlbGVnYXRl
MgBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQA8SW5wdXQwX1Byb2Nlc3NJbnB1dFJvdz5iX18x
AENTJDw+OV9fQ2FjaGVkQW5vbnltb3VzTWV0aG9kRGVsZWdhdGUzAFRyaW0AQ2hhcgBTcGxpdABT
eXN0ZW0uQ29yZQBTeXN0ZW0uTGlucQBFbnVtZXJhYmxlAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5l
cmljAElFbnVtZXJhYmxlYDEAU2VsZWN0AElPcmRlcmVkRW51bWVyYWJsZWAxAE9yZGVyQnkASm9p
bgBHZXRTdHJpbmcAc2V0X0l0ZW0ASXNOdWxsAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2Vw
dGlvbgBCb29sZWFuAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0
X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlU3RhdGUALmNjdG9yAFNDXzMwZGIwNGEyNDM0NDRlOTdiODdlY2VkY2Y3
NTgxMDc1LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAA9JAG4AcAB1AHQAIAAwAAAF
LAAgAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUA
IABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBl
ACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAcVMAQwBfADMA
MABkAGIAMAA0AGEAMgA0ADMANAA0ADQAZQA5ADcAYgA4ADcAZQBjAGUAZABjAGYANwA1ADgAMQAw
ADcANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAD4n0gDseDb
Sq/h1aYitV7nAAiJhF3NgIDMkQi3elxWGTTgiQMGEhQDBhIYAyAAAQkgBAEIDhIVEhkFIAEBEhAJ
IAMBEhUdCBIZAyAADgQgAQEOAyAAAgQgAQECAygADgMoAAIDBhIFBSABARIFAwYSHQMGEiEEAAAS
HQQAABIhBQABARIhBAgAEh0ECAASIQMGEiAEAAASIAQIABIgBCABAQgGIAICDhFZBSABHQgIBAEA
AAAEAAEODgcGFRJhAg4OBiABHQ4dAwYVEmECDg4FIAIBHBgXEAICFRJxAR4BFRJxAR4AFRJhAh4A
HgEECgIODhcQAgIVEnUBHgAVEnEBHgAVEmECHgAeAQkAAg4OFRJxAQ4LBwMdDhUSdQEOHQMDBhIV
AwYdCAQgAQ4IBSACAQgcBCABAggIAAESgIURgIkFIAASgI0HIAIBDhKAjQQHARIdBiABARGAlQgB
AAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfMzBkYjA0YTI0MzQ0NGU5N2I4N2VjZWRj
Zjc1ODEwNzUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAaDUAAAAAAAAAAAAAfjUAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAHA1AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAkfssWAAABACR+yxY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
MwAwAGQAYgAwADQAYQAyADQAMwA0ADQANABlADkANwBiADgANwBlAGMAZQBkAGMAZgA3ADUAOAAx
ADAANwA1AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOAAzADUA
LgAzADIAMgA5ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMwAw
AGQAYgAwADQAYQAyADQAMwA0ADQANABlADkANwBiADgANwBlAGMAZQBkAGMAZgA3ADUAOAAxADAA
NwA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBDAF8AMwAwAGQAYgAwADQAYQAyADQAMwA0ADQANABlADkANwBiADgANwBl
AGMAZQBkAGMAZgA3ADUAOAAxADAANwA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAQwBfADMAMABkAGIAMAA0AGEAMgA0ADMANAA0ADQAZQA5ADcAYgA4ADcAZQBj
AGUAZABjAGYANwA1ADgAMQAwADcANQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA4ADMANQAuADMAMgAyADkAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA4ADMANQAuADMAMgAyADkAMgAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACQNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_30db04a243444e97b87ecedcf7581075</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">d301805386c2adbcd1026f67ff0ba23d</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers.Inputs[Input 0].Columns[singers]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="singers"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output].Columns[singers]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers.Outputs[Output 0].Columns[IsGroup]"
                          dataType="bool"
                          lineageId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers.Outputs[Output 0].Columns[IsGroup]"
                          name="IsGroup" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[Derived Column Output]"
                  endId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Inputs[OLE DB Command Input]"
                  name="Derived Column Output"
                  startId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[Flat File Source Output]"
                  endId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Genre.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[OLE DB Command Output]"
                  endId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Inputs[OLE DB Command Input]"
                  name="OLE DB Command Output"
                  startId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[OLE DB Command Output1]"
                  endId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Inputs[OLE DB Command Input]"
                  name="OLE DB Command Output"
                  startId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[OLE DB Command Output2]"
                  endId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist.Inputs[OLE DB Command Input]"
                  name="OLE DB Command Output"
                  startId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[Output 0]"
                  endId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Genre.Outputs[Output 0]" />
                <path
                  refId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[Output 01]"
                  endId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Data From Csv Files Into Datasource\Insert Or Get PageId from Database"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{986A0105-CF3E-4004-83CB-732481C16321}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Or Get PageId from Database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F1C3BEF1-92F2-4D71-AB01-87DDFECFBD28}"
              SQLTask:SqlStatementSource="EXECUTE [dbo].[usp_InsertPageIfNotExist] ?, N'&lt;update&gt;', N'&lt;update&gt;', ? OUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::PageShortName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="20" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::PageId"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Data From Csv Files Into Datasource\Move Finished Csv File"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="File System Task"
          DTS:DTSID="{36EA69D5-1D4C-40E6-8B8F-808C1E12448A}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Finished Csv File"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::FullCsvFilePath"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::FinishedFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Data From Csv Files Into Datasource.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{659ECAB0-7985-4CD8-99E3-FD1F49B4A0AA}"
          DTS:From="Package\Insert Data From Csv Files Into Datasource\Get Info From Filename"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Insert Data From Csv Files Into Datasource\Insert Or Get PageId from Database" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Data From Csv Files Into Datasource.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{38843F04-A7A1-4E2A-905F-8D1FEF86311C}"
          DTS:From="Package\Insert Data From Csv Files Into Datasource\Insert Or Get PageId from Database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Data From Csv Files Into Datasource.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{6C56C43E-E235-4F74-A695-45AFC5237A72}"
          DTS:From="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Insert Data From Csv Files Into Datasource\Move Finished Csv File" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Insert Data From Csv Files Into Datasource.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{1413286a-947c-4823-8740-32f7c7003750}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{89a4af7c-54ab-4190-8d30-4aa807037551}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">0</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{5b03e079-1f2f-48dc-9cf0-b973df055a39}"
          DTS:ObjectName="{7D1D66F6-17EB-475D-97FB-7FF3C063FD73}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::SourceCsvFileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Scan Source Folder and Init"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Init variables"
      DTS:DTSID="{0A31655A-DEE0-45CB-967C-84F9957C21F0}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Scan Source Folder and Init"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_14ab0b0898be4d49b8d4bd345aef5980"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::SourceFolder"
          ReadWriteVariables="User::MaxErrorLoopCsv">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_14ab0b0898be4d49b8d4bd345aef5980.Properties.Settings.get_Default():ST_14ab0b0898be4d49b8d4bd345aef5980.Properties.Sett" +
    "ings")]

namespace ST_14ab0b0898be4d49b8d4bd345aef5980.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_14ab0b0898be4d49b8d4bd345aef5980
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string sourceFolder = Dts.Variables["User::SourceFolder"].Value.ToString();
            Dts.Variables["User::MaxErrorLoopCsv"].Value = Directory.GetFiles(sourceFolder).Length;
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_14ab0b0898be4d49b8d4bd345aef5980.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{26c63922-fe88-48e4-b08d-a0544d2975e6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_14ab0b0898be4d49b8d4bd345aef5980</RootNamespace>
    <AssemblyName>ST_14ab0b0898be4d49b8d4bd345aef5980</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_14ab0b0898be4d49b8d4bd345aef5980</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_14ab0b0898be4d49b8d4bd345aef5980</msb:DisplayName>
		<msb:ProjectId>{7D8A4D9A-7F12-42A5-8350-DD88C4BB718E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_14ab0b0898be4d49b8d4bd345aef5980.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_14ab0b0898be4d49b8d4bd345aef5980")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_14ab0b0898be4d49b8d4bd345aef5980")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_14ab0b0898be4d49b8d4bd345aef5980.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_14ab0b0898be4d49b8d4bd345aef5980.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_14ab0b0898be4d49b8d4bd345aef5980.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_14ab0b0898be4d49b8d4bd345aef5980.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_14ab0b0898be4d49b8d4bd345aef5980.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_14ab0b0898be4d49b8d4bd345aef5980.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEGHclYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAni4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEQuAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
LgAAAAAAAEgAAAACAAUA4CEAAGQMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBUAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApymQAAcG8YAAAKBigbAAAKjmmMHwAAAW8cAAAKAigWAAAKFm8dAAAKKh4C
KB4AAAoqAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADYAwAAI34AAEQEAADcBQAAI1N0cmluZ3MAAAAAIAoAAMgAAAAjVVMA6AoAABAAAAAjR1VJRAAA
APgKAABsAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHwAAAAUAAAAGAAAA
CQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgAB
AAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkC
cAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMG
AOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F
/QQSADUF/QQGAGQFWgUGAHcFugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJ
AAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcA
VoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAA
AAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAA
AACGABoCGwACABwhAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8
AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsA
oQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+
BZcA6QBHBZ0ACQBRBaEA8QBuBaUA6QB9BasA2QCHBV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAA
LgAbACUBLgAjACUBLgBjAEsBLgALALQALgATAPwALgAzAPwALgArACUBLgA7ACsBLgBDACUBLgBb
AEIBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCwAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIA
AgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAADFFlh3AAAAAAAAfwAAAAQAAAAAAAAAAAAA
AAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAA
AAAAAAoA3gQAAAAAAAAAAAEAAACWBQAABQAEAAAAAAAAPE1vZHVsZT4AU1RfMTRhYjBiMDg5OGJl
NGQ0OWI4ZDRiZDM0NWFlZjU5ODAuZGxsAFJlc291cmNlcwBTVF8xNGFiMGIwODk4YmU0ZDQ5Yjhk
NGJkMzQ1YWVmNTk4MC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfMTRhYjBiMDg5
OGJlNGQ0OWI4ZDRiZDM0NWFlZjU5ODAAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMA
UmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJ
bmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQA
TWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFy
aWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5JTwBEaXJlY3RvcnkAR2V0
RmlsZXMASW50MzIAc2V0X1ZhbHVlAHNldF9UYXNrUmVzdWx0AFNUXzE0YWIwYjA4OThiZTRkNDli
OGQ0YmQzNDVhZWY1OTgwLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcVMAVABf
ADEANABhAGIAMABiADAAOAA5ADgAYgBlADQAZAA0ADkAYgA4AGQANABiAGQAMwA0ADUAYQBlAGYA
NQA5ADgAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAJVUAcwBl
AHIAOgA6AFMAbwB1AHIAYwBlAEYAbwBsAGQAZQByAAArVQBzAGUAcgA6ADoATQBhAHgARQByAHIA
bwByAEwAbwBvAHAAQwBzAHYAAAAAAKIVaoQYRJRChXMztiNr/l0ACLd6XFYZNOCJCImEXc2AgMyR
AwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIA
AAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAMgAA4FAAEdDg4EIAEBHAMHAQ5HAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3
b3JrIDQoAQAjU1RfMTRhYjBiMDg5OGJlNGQ0OWI4ZDRiZDM0NWFlZjU5ODAAAAUBAAAAABYBABFD
b3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AQAAbC4AAAAAAAAAAAAAji4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAuAAAAAAAAAAAAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBYd8UWAAABAFh3xRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AMQA0AGEAYgAwAGIAMAA4ADkAOABiAGUANABkADQAOQBiADgAZAA0AGIAZAAzADQANQBhAGUA
ZgA1ADkAOAAwAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOAAy
ADkALgAzADAANQA1ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
MQA0AGEAYgAwAGIAMAA4ADkAOABiAGUANABkADQAOQBiADgAZAA0AGIAZAAzADQANQBhAGUAZgA1
ADkAOAAwAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AMQA0AGEAYgAwAGIAMAA4ADkAOABiAGUANABkADQAOQBiADgA
ZAA0AGIAZAAzADQANQBhAGUAZgA1ADkAOAAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADEANABhAGIAMABiADAAOAA5ADgAYgBlADQAZAA0ADkAYgA4AGQA
NABiAGQAMwA0ADUAYQBlAGYANQA5ADgAMAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA4ADIAOQAuADMAMAA1ADUAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA4ADIAOQAuADMAMAA1ADUAMgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACgPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{629C0F58-38A7-4103-A483-E443F67299C6}"
      DTS:From="Package\Scan Source Folder and Init"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import Source Pages If Not Exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{07238588-35EE-46AD-82B9-F31BB33F1494}"
      DTS:From="Package\Import Source Pages If Not Exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Insert Data From Csv Files Into Datasource" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{2A85C9AC-29C2-4E85-92E1-0DC8D3CB6702}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{D559A4CB-6409-447A-A734-771DBB75B738}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="240,42"
          Id="Package\Import Source Pages If Not Exists"
          TopLeft="16.0000000000001,107.5" />
        <NodeLayout
          Size="193,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Get Info From Filename"
          TopLeft="34,5.5" />
        <NodeLayout
          Size="200,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database"
          TopLeft="30.5,209.5" />
        <NodeLayout
          Size="250,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Or Get PageId from Database"
          TopLeft="5.50000000000003,107.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Move Finished Csv File"
          TopLeft="38.0000000000001,311.5" />
        <EdgeLayout
          Id="Package\Insert Data From Csv Files Into Datasource.PrecedenceConstraints[Constraint]"
          TopLeft="130.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Data From Csv Files Into Datasource.PrecedenceConstraints[Constraint 1]"
          TopLeft="130.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Data From Csv Files Into Datasource.PrecedenceConstraints[Constraint 2]"
          TopLeft="130.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="261,409"
          Size="261,452"
          Id="Package\Insert Data From Csv Files Into Datasource"
          TopLeft="5.50000000000009,209.5" />
        <NodeLayout
          Size="211,42"
          Id="Package\Scan Source Folder and Init"
          TopLeft="30.5,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="136,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="136,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="211,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Genre If Not Exist"
          TopLeft="16.5000000000001,413.5" />
        <NodeLayout
          Size="233,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To HitStatictis If Not Exist"
          TopLeft="5.50000000000009,719.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Derived Column"
          TopLeft="44,311.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Genre"
          TopLeft="44,107.5" />
        <NodeLayout
          Size="179,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Tranform Performers"
          TopLeft="32.5,209.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Song If Not Exist"
          TopLeft="18.5000000000001,617.5" />
        <NodeLayout
          Size="131,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Csv Source"
          TopLeft="56.5,5.5" />
        <NodeLayout
          Size="213,42"
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database\Insert To Singer If Not Exist"
          TopLeft="15.5000000000001,515.5" />
        <EdgeLayout
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[Output 01]"
          TopLeft="122,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[Output 0]"
          TopLeft="122,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[OLE DB Command Output2]"
          TopLeft="122,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[OLE DB Command Output1]"
          TopLeft="122,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[OLE DB Command Output]"
          TopLeft="122,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[Flat File Source Output]"
          TopLeft="122,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Data From Csv Files Into Datasource\Insert Data into Database.Paths[Derived Column Output]"
          TopLeft="122,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>